<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.kungreat.bbs.mapper.JavaDetailsMapper">
  <resultMap id="BaseResultMap" type="cn.kungreat.bbs.domain.JavaDetails">
    <result column="id" property="id" />
    <result column="account" property="account" />
    <result column="publish_time" property="publishTime" />
    <result column="update_time" property="updateTime" />
    <result column="detail_data" property="detailData" />
    <result column="posts_id" property="postsId" />
    <result column="is_posts" property="isPosts" />
    <result column="reply_total" property="replyTotal" />
  </resultMap>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.kungreat.bbs.domain.JavaDetails" useGeneratedKeys="true">
    insert into java_details (account, publish_time, update_time, 
      detail_data, posts_id, is_posts)
    values (#{account,jdbcType=VARCHAR}, #{publishTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{detailData,jdbcType=LONGVARCHAR}, #{postsId}, #{isPosts})
  </insert>

  <update id="updateByPrimaryId">
    update java_details
    set update_time = #{updateTime},
      detail_data = #{detailData}
    where id = #{id} AND account = #{account}
  </update>

  <update id="updateForPosts">
    update java_details
    set update_time = #{updateTime},
      detail_data = #{detailData}
    where posts_id = #{postsId} AND is_posts = 1 AND account = #{account}
  </update>

  <delete id="deleteAll">
    DELETE FROM java_details
    <include refid="baseQuery"/>
  </delete>

  <delete id="deleteByPrimaryId">
    DELETE FROM java_details WHERE id = #{id}
  </delete>

  <select id="selectAll" resultMap="BaseResultMap">
    select id, account, publish_time, update_time, detail_data,
    posts_id, is_posts
    from java_details
    <include refid="baseQuery"/>
    ORDER BY publish_time
    limit #{start},#{pageSize}
  </select>

  <select id="selectCount" resultType="java.lang.Long">
    select count(*) from java_details
    <include refid="baseQuery"/>
  </select>

  <select id="selectByPrimaryId" resultMap="BaseResultMap">
    select id, account, publish_time, update_time, detail_data,
      posts_id, is_posts
    from java_details
    WHERE id = #{0}
  </select>

  <select id="selectReplyTimeEnd" resultMap="BaseResultMap">
     select id, account, publish_time, update_time, detail_data,
      posts_id, is_posts
    from java_details where posts_id = #{0} ORDER BY update_time DESC  LIMIT 1
  </select>


  <select id="selectReplyCount" resultType="java.lang.Integer">
    select count(*) from java_details
    <include refid="baseQuery"/>
    GROUP BY posts_id
  </select>

  <select id="selectReply" resultMap="BaseResultMap">
        SELECT account, max(publish_time) as publish_time , count(*) as reply_total, posts_id FROM java_details
        <include refid="baseQuery"/>
        GROUP BY posts_id ORDER BY ${orderField} DESC
        limit #{start},#{pageSize}
  </select>

  <sql id="baseQuery">
    <where>
      <if test="postsId !=null">
        AND posts_id = #{postsId}
      </if>
      <if test="account !=null and account !='' ">
        AND account = #{account}
      </if>
    </where>
  </sql>
</mapper>